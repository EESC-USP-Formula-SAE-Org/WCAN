{
	"nodes":[
		{"id":"8e3022ac77b31a22","type":"group","x":-644,"y":-404,"width":1484,"height":1284,"label":"Central"},
		{"id":"e5eb2fc153f4ce02","type":"group","x":980,"y":-404,"width":1480,"height":1067,"label":"Aquisitor"},
		{"id":"334697c2848cd0cb","x":320,"y":2720,"width":460,"height":200,"type":"group"},
		{"id":"cf84065d9f533f52","x":920,"y":1920,"width":384,"height":200,"type":"group"},
		{"id":"781b32c1be6f4f61","type":"text","text":"# acquisitor_t\na `struct`  `aquisitor_t` é responsável por armazenar informação de um sensor de aquisição de dado\n### data\n- mac_address (`uint8_t[6]`)\n- data_type (`data_type_t`)\n- data_count (`size_t`)\n- online (`boolean`\n- data (`data_t*`)","x":-624,"y":-384,"width":644,"height":364},
		{"id":"318768def7faced8","type":"text","text":"# Setup()\ncadastra `ReceiveHandshakeCallback` como callback do `ESPNOW`\nchama `SendConnectionRequest` para todos os `acquisitors`.\nespera um tempo de `max_timeout` e remove `ReceiveHandshakeCallback`\ncadastra `ReceiveDataCallback` como callback do `ESPNOW`\n","x":-624,"y":20,"width":644,"height":180},
		{"id":"3e234f6e67990659","type":"text","text":"# global data\n\n- acquisitors (`acquisitors_t*`)\n- frame_time (`uint`)","x":60,"y":-384,"width":760,"height":144},
		{"id":"2da0327e396ddf3d","type":"text","text":"# ReceiveDataCallback()\ncallback com dados, identifica qual sensor é, desempacota os dados na lista correta junto com os timeframes e manda via can\npisca LED","x":-624,"y":220,"width":644,"height":180},
		{"id":"7811f70f3c4a48c1","type":"text","text":"# CANSend(acquisitor_t\\*, data\\*)\n\nRecebe uma lista de dados (data point + timestamp) e joga tudo na rede CAN","x":-624,"y":420,"width":644,"height":130},
		{"id":"43970542a175c44d","type":"text","text":"# data_t\na `struct`  `data_t` é basicamente um ponto de dado de tipo arbitrário \n- data (`TEMPLATE`)\n- timestamp (`uint`)","x":60,"y":-212,"width":760,"height":192},
		{"id":"42fd42d8676dd8e1","type":"text","text":"# MemoryDump()\n\nExibe tudo da memória via serial, ativado por algum botão?","x":-624,"y":1200,"width":760,"height":160},
		{"id":"a63c23b957ee3548","type":"text","text":"# MemorySave(acquisitor_t\\*, data\\*)\n\nVerifica se a memória está cheia, se sim acende um LED, avisando.\nSalva os dados na memória permanente da ESP","x":-624,"y":960,"width":644,"height":180},
		{"id":"2238ac1c73d2ae22","type":"text","text":"# MemoryClear()\n\nLImpa tudo da memória, ativado por algum botão?","x":136,"y":1040,"width":760,"height":160},
		{"id":"148ad12c8386099f","type":"text","text":"# SendConnectionRequest(acquisitor_t*)\nenvia mensagem para um [[sensor de aquisição]] passando para ele o tempo atual e o [[tempo de frame]] em milisegundos","x":60,"y":20,"width":760,"height":163},
		{"id":"7246b286446d7708","type":"text","text":"# global data\n\n- data_buffer (`data_t*`)\n- current_time (`uint`)\n- mac_address (`uint8_t[6]`)\n- data\\_rate\\_hz (`size_t`)\n- frame\\_time (`uint`)\n- data\\_type (`data_type_t`)","x":1000,"y":-384,"width":644,"height":278},
		{"id":"34b2d2232344c5db","type":"text","text":"# GetCommunicationCallback()\nrecebe o tempo de frame e o tempo atual da central, calcula o tamanho do buffer e quantos pacotes são necessários para enviar toda a informação. \ninicializa o RTC.\nremovecallback","x":1680,"y":-157,"width":760,"height":220},
		{"id":"487025e2c14642a0","type":"text","text":"# Setup()\ncadastra `GetCommunicationCallback` como callback do `ESPNOW`\n\n","x":1000,"y":-87,"width":644,"height":180},
		{"id":"100406544db83685","type":"text","text":"# ReadData()\nFunção para ler os dados do sensor, insere os dados no buffer, quando ele tiver cheio chama `SendData` e `MemorySave`","x":1000,"y":123,"width":644,"height":180},
		{"id":"23be5d57a0d85942","type":"text","text":"# MemorySave()\n\nVerifica se a memória está cheia, se sim acende um LED, avisando.\nSalva os dados do buffer na memória permanente da ESP","x":1000,"y":333,"width":644,"height":180},
		{"id":"9fa260ef00fe4c29","type":"text","text":"# MemoryClear()\n\nLImpa tudo da memória, ativado por algum botão?","x":1680,"y":483,"width":760,"height":160},
		{"id":"b6f304e69446b2c3","type":"text","text":"# data_t\na `struct`  `data_t` é basicamente um ponto de dado de tipo arbitrário \n- data (`TEMPLATE`)\n- timestamp (`uint`)","x":1680,"y":-384,"width":760,"height":192},
		{"id":"c10e9924907c667d","type":"text","text":"# ReceiveHandshakeCallback()\ncallback com: `can_id` confirmando que o [[sensor de aquisição]] está conectado nessa rede","x":60,"y":220,"width":644,"height":180},
		{"id":"ab01e482f433a1e0","type":"text","text":"# SendData()\nEmpacota os dados do buffer e envia via `ESPNOW`\npisca LED\n","x":1680,"y":93,"width":760,"height":180},
		{"id":"bf143243e45a2a41","type":"text","text":"# MemoryDump()\n\nExibe tudo da memória via serial, ativado por algum botão?","x":1680,"y":303,"width":760,"height":160},
		{"id":"c8e2e59b07e7a588","x":-624,"y":1760,"width":344,"height":80,"type":"text","text":"# `ReadDataTask()`"},
		{"id":"8149dbc3af4e81a4","type":"text","text":"# `send_queue`","x":-140,"y":1760,"width":344,"height":80,"color":"5"},
		{"id":"e8bf7b3414bd3d9b","type":"text","text":"# `SendProcessingTask()`","x":360,"y":1760,"width":360,"height":80},
		{"id":"9a5ce22383e12aa3","type":"text","text":"# Take `send_mutex`","x":940,"y":1760,"width":344,"height":80},
		{"id":"6cf72f90c2867b62","type":"text","text":"# `SendData()`","x":940,"y":1940,"width":344,"height":80},
		{"id":"791b92d9d0afd932","type":"text","text":"# Start `resend_timer`","x":940,"y":2020,"width":344,"height":80},
		{"id":"25048bcda2a1c2fa","type":"text","text":"# `ResendData()`","x":1560,"y":2020,"width":344,"height":80},
		{"id":"4011b7b6cacdc672","type":"text","text":"# Give `send_mutex`\n# Stop `resend_timer`","x":1574,"y":2240,"width":316,"height":140},
		{"id":"d04476e54a9f8b5f","type":"text","text":"# `ESPNOW_RecvCallback`","x":-624,"y":2280,"width":344,"height":80},
		{"id":"ba6f16f1f62c6c67","type":"text","text":"# `can_id`","x":-140,"y":2280,"width":344,"height":80,"color":"5"},
		{"id":"ee4ca656f338794c","type":"text","text":"# `recv_queue`","x":-140,"y":2600,"width":344,"height":80,"color":"5"},
		{"id":"14699aff232ce228","type":"text","text":"# `RecvProcessingTask()`","x":-148,"y":2780,"width":360,"height":80},
		{"id":"2d652e0983374cb7","type":"text","text":"# `RecvProcessingCallback()`","x":340,"y":2820,"width":420,"height":80,"color":"3"},
		{"id":"f85ac3d29c02f33b","type":"text","text":"# `SendAck()`","x":340,"y":2740,"width":360,"height":80}
	],
	"edges":[
		{"id":"a5f3fccedb1b3a4c","fromNode":"c8e2e59b07e7a588","fromSide":"right","toNode":"8149dbc3af4e81a4","toSide":"left","color":"4"},
		{"id":"15a3869316055c8a","fromNode":"e8bf7b3414bd3d9b","fromSide":"left","toNode":"8149dbc3af4e81a4","toSide":"right","color":"5"},
		{"id":"44b053984faed17e","fromNode":"e8bf7b3414bd3d9b","fromSide":"right","toNode":"9a5ce22383e12aa3","toSide":"left"},
		{"id":"0474929ca81946ec","fromNode":"9a5ce22383e12aa3","fromSide":"bottom","toNode":"cf84065d9f533f52","toSide":"top","color":"4"},
		{"id":"84b3785d3c38e50b","fromNode":"791b92d9d0afd932","fromSide":"right","toNode":"25048bcda2a1c2fa","toSide":"left","color":"4","label":"Every 500ms"},
		{"id":"706e2a87f0d88da4","fromNode":"25048bcda2a1c2fa","fromSide":"bottom","toNode":"4011b7b6cacdc672","toSide":"top","color":"1","label":"After 5 tries"},
		{"id":"b2154d09d002b4c6","fromNode":"d04476e54a9f8b5f","fromSide":"right","toNode":"ba6f16f1f62c6c67","toSide":"left"},
		{"id":"dcfdf2e4745bdef6","fromNode":"ba6f16f1f62c6c67","fromSide":"right","toNode":"4011b7b6cacdc672","toSide":"left","color":"4","label":"can_id==ack_id"},
		{"id":"05751d3733a6cff7","fromNode":"ba6f16f1f62c6c67","fromSide":"bottom","toNode":"ee4ca656f338794c","toSide":"top","color":"4","label":"filter"},
		{"id":"f12c09220e61a695","fromNode":"14699aff232ce228","fromSide":"right","toNode":"334697c2848cd0cb","toSide":"left"},
		{"id":"5b608babca78b9e9","fromNode":"14699aff232ce228","fromSide":"top","toNode":"ee4ca656f338794c","toSide":"bottom","color":"5"},
		{"id":"162a1bd2272aa197","fromNode":"25048bcda2a1c2fa","fromSide":"top","toNode":"6cf72f90c2867b62","toSide":"right"}
	]
}